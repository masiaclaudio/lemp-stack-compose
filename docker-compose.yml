###
# lemp-stack-compose
# LEMP Stack with Docker Compose
# Copyright (c) 2017 Volkan Kucukcakar
#
# This file is part of lemp-stack-compose.
#
# lemp-stack-compose is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# lemp-stack-compose is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This copyright notice and license must be retained in all files and derivative works.
###


###
# File Name        : docker-compose.yml
# File Description : Main Compose file for server related common containers
###

version: '3.8'

services:

    # Container: server-proxy. Common reverse proxy.
    server-proxy:
        image: claudiomasia/nginx
        restart: on-failure
        container_name: server-proxy
        depends_on:
            - server-log
        ports:
            - "80:80"
            - "443:443"
        logging:
            driver: syslog
            options:
                syslog-address: "tcp://localhost:5514"
                tag: "server-proxy"
        environment:
            AUTO_CONFIGURE: enable
            CONTAINER_NAME: server-proxy
            SERVER_ROLE: proxy
            CERT_CREATE_default_server: enable
            DHPARAM_CREATE: enable
            DHPARAM_KEYSIZE: 2048
            TZ: Europe/Rome
        volumes:
            - ./configurations/server-proxy:/configurations
            # See README.md to learn how to activate Let's Encrypt support
            #- /etc/letsencrypt/live:/etc/letsencrypt/live

    # Container: server-log. Common rsyslog and and its own logrotate service.
    server-log:
        #image: vkucukcakar/rsyslog
        image: claudiomasia/rsyslog
        restart: on-failure
        container_name: server-log
        healthcheck:
            interval: 5s
            timeout: 5s
            retries: 3
            #start_period: 5s
        expose:
            - "5514"
            - "5514/udp"
        environment:
            AUTO_CONFIGURE: enable
            CONTAINER_NAME: server-log
            COMMON_TAG: server-common
            CONTAINER_TAGS: "server-proxy"
            TZ: Europe/Rome
        volumes:
            - ./log:/var/log
            - ./configurations/server-log:/configurations
        # Currently, host network_mode is used as container hostname is not reachable at this level.
        # So, 'syslog-address: "tcp://localhost:5514"' is used instead of 'syslog-address: "tcp://server-log:514"'
        # To prevent conflict in the host computer, also the default port 514 is changed as 5514.
        # Another workaround would be using static ip here.
        # Maybe this will be fixed in the future.
        network_mode: "host"

    # Container: server-db. Common MySql database.
    server-db:
        image: mariadb:10
        restart: on-failure
        container_name: server-db
        depends_on:
            - server-log
        expose:
            - "3306"
        ports:
            # This is just to reach from host. Containers should already reach by using same network.
            - "127.0.0.1:3306:3306"
        logging:
            driver: syslog
            options:
                syslog-address: "tcp://localhost:5514"
                tag: "server-db"
        volumes:
            - db_data:/var/lib/mysql
            - ./configurations/server-db/mysql.cnf:/etc/mysql/conf.d/mysql.cnf:ro
        environment:
            # Change the default mysql root password here!
            MYSQL_ROOT_PASSWORD: toor
            TZ: Europe/Rome
        networks:
            server-db:

    # Container: server-phpmyadmin. Common Phpmyadmin.
    #server-phpmyadmin:
    #    extends:
    #        file: common-services.yml
    #        service: phpmyadmin
    #    container_name: server-phpmyadmin
    #    depends_on:
    #        - server-db
    #    logging:
    #        driver: syslog
    #        options:
    #            syslog-address: "tcp://localhost:5514"
    #            tag: "server-phpmyadmin"
    #    environment:
    #        # Write mysql root password here
    #        MYSQL_ROOT_PASSWORD: toor
    #        PMA_HOST: server-db
    #    networks:
    #        server-db:

    # Container: server-adminer. Common adminer.
    #server-adminer:
    #    image: adminer:standalone
    #    restart: on-failure
    #    container_name: server-adminer
    #    depends_on:
    #        - server-db
    #    ports:
    #        # Accessible only from localhost. Changing to "8080:8080" will make Adminer accessible from the Internet
    #        - "127.0.0.1:8080:8080"
    #    logging:
    #        driver: syslog
    #        options:
    #            syslog-address: "tcp://localhost:5514"
    #            tag: "server-adminer"
    #    environment:
    #        ADMINER_DEFAULT_SERVER: server-db
    #        # Want to change design? See https://www.adminer.org/ for alternative designs
    #        ADMINER_DESIGN: pepa-linha
    #    volumes:
    #        # Override php.ini limits for SQL/file import
    #        - ./configurations/server-adminer/adminer-custom-php.ini:/usr/local/etc/php/conf.d/adminer-custom-php.ini
    #    networks:
    #        server-db:

    # Container: server-gui. Common Portainer gui.
    #server-gui:
    #    image: portainer/portainer-ce
    #    restart: on-failure
    #    container_name: server-gui
    #    depends_on:
    #        - server-log
    #    ports:
    #        # Accessible only from localhost. Changing to "9000:9000" will make Portainer accessible from the Internet
    #        - "127.0.0.1:9000:9000"
    #    command: -l hide-me=from-portainer
    #    labels:
    #        hide-me: "from-portainer"
    #    logging:
    #        driver: syslog
    #        options:
    #            syslog-address: "tcp://localhost:5514"
    #            tag: "server-gui"
    #    volumes:
    #        - /var/run/docker.sock:/var/run/docker.sock
    #        - portainer_data:/data

    # Container: server-mta. Common mail transfer agent.
    #server-mta:
    # Use a mail transfer agent of your choice. i.e.: A postfix image
    #TODO

# Named volumes
volumes:
    db_data:
    #portainer_data:

# Networks
networks:
    default:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: br-default
    server-db:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: br-server-db